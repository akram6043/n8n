{
  "name": "Project 3 | ASMR Shorts | wavespeed fal",
  "nodes": [
    {
      "parameters": {
        "jsCode": "function findSceneEntries(obj) {\n  const scenes = [];\n\n  for (const [key, value] of Object.entries(obj)) {\n    if (key.toLowerCase().startsWith(\"scene\") && typeof value === \"string\") {\n      scenes.push(value);\n    } else if (typeof value === \"object\" && value !== null) {\n      scenes.push(...findSceneEntries(value));\n    }\n  }\n\n  return scenes;\n}\n\nlet output = [];\n\ntry {\n  const inputData = items[0].json;\n  const scenes = findSceneEntries(inputData);\n\n  if (scenes.length === 0) {\n    throw new Error(\"No scene keys found at any level.\");\n  }\n\n  output = scenes.map(scene => ({ description: scene }));\n} catch (e) {\n  throw new Error(\"Could not extract scenes properly. Details: \" + e.message);\n}\n\nreturn output;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1940,
        540
      ],
      "id": "226d0fa8-bc57-4774-94e9-0d5e11244017",
      "name": "Unbundle Prompts"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://queue.fal.run/fal-ai/mmaudio-v2 ",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "application/json",
        "body": "= {\n        \"prompt\": \"ASMR Soothing sound effects. {{ $('Prompts AI Agent').item.json.output.Sound }}\",\n        \"duration\": 10,\n        \"video_url\": \"{{ $json.data.outputs[0] }}\"\n  }\n",
        "options": {
          "batching": {
            "batch": {
              "batchSize": 1,
              "batchInterval": 2000
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2060,
        680
      ],
      "id": "950cf6e5-1090-4998-87fd-fea725e34001",
      "name": "Create Sounds",
      "credentials": {
        "httpHeaderAuth": {
          "id": "1X8yKerPU0AuFRGK",
          "name": "fai.ai header auth"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://queue.fal.run/fal-ai/mmaudio-v2/requests/{{ $json.request_id }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2580,
        680
      ],
      "id": "44cfe7e8-be50-4fb2-8392-dc48686e0d55",
      "name": "Get Sounds",
      "credentials": {
        "httpHeaderAuth": {
          "id": "1X8yKerPU0AuFRGK",
          "name": "fai.ai header auth"
        }
      }
    },
    {
      "parameters": {
        "amount": 60
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2260,
        680
      ],
      "id": "b471e999-d0f4-494f-a566-1be30687ef0c",
      "name": "Wait for Sounds",
      "webhookId": "e8f621a2-912d-43ad-ac67-0f135a441870"
    },
    {
      "parameters": {
        "jsCode": "return [\n  {\n    video_urls: items.map(item => item.json.video.url)\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1940,
        820
      ],
      "id": "52b7092f-aef8-4bb3-b854-4295d6dca5a6",
      "name": "List Elements"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://queue.fal.run/fal-ai/ffmpeg-api/compose",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "application/json",
        "body": "={\n  \"tracks\": [\n    {\n      \"id\": \"1\",\n      \"type\": \"video\",\n      \"keyframes\": [\n        { \"url\": \"{{ $json.video_urls[0] }}\", \"timestamp\": 0, \"duration\": 10 },\n        { \"url\": \"{{ $json.video_urls[1] }}\", \"timestamp\": 10, \"duration\": 10 }\n      ]\n    }\n  ]\n}",
        "options": {
          "batching": {
            "batch": {
              "batchSize": 1,
              "batchInterval": 2000
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2060,
        820
      ],
      "id": "f1a8216a-603d-4cd9-99af-3ed36b1f7953",
      "name": "Sequence Video",
      "credentials": {
        "httpHeaderAuth": {
          "id": "1X8yKerPU0AuFRGK",
          "name": "fai.ai header auth"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://queue.fal.run/fal-ai/ffmpeg-api/requests/{{ $json.request_id }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2580,
        820
      ],
      "id": "5e3e3d6f-3af1-45ef-a6f2-fdff6c141533",
      "name": "Get Final Video",
      "credentials": {
        "httpHeaderAuth": {
          "id": "1X8yKerPU0AuFRGK",
          "name": "fai.ai header auth"
        }
      }
    },
    {
      "parameters": {
        "amount": 60
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2260,
        820
      ],
      "id": "8ba29c89-69a6-495a-a14d-b5a34dfc0925",
      "name": "Wait for Final Video",
      "webhookId": "4d45095b-ac57-450c-a05c-0fba53294131"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "typeVersion": 1,
      "position": [
        2380,
        380
      ],
      "id": "56a9f56a-fc14-4d71-9d11-9941943f42d5",
      "name": "Think"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Give me an idea about \n\n[[\na random hard material or element being sliced with a sharp knife - have your idea be in this format: \"(color) (material) shaped like a (random object)\". Examples for your inspiration: glass shaped like a strawberry, crystal shaped like a bear, dry ice shaped like a snowflake, diamond shaped like a hat, etc. \n]]\n\nUse the Think tool to review your output",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=**Role**: You are an AI designed to generate 1 immersive, realistic idea based on a user-provided topic. Your output must be formatted as a JSON array (single line) and follow all the rules below exactly.\n\n***\nRULES:\n\nOnly return 1 idea at a time.\n\nThe user will provide a key topic (e.g. \"glass cutting ASMR,\" \"wood carving sounds,\" \"satisfying rock splits\").\n\nThe Idea must:\n\nBe under 13 words.\n\nDescribe an interesting and viral-worthy moment, action, or event related to the provided topic.\n\nCan be as surreal as you can get, doesn't have to be real-world!\n\nThe Caption must be:\n\nShort, punchy, and viral-friendly.\n\nInclude one relevant emoji.\n\nInclude exactly 12 hashtags in this order:\n** 4 topic-relevant hashtags\n** 4 all-time most popular hashtags\n** 4 currently trending hashtags (based on live research)\n\nAll hashtags must be lowercase.\n\nSet Status to \"for production\" (always).\n\nThe Environment must:\n\nBe under 20 words.\n\nMatch the action in the Idea exactly.\n\nClearly describe:\n\nWhere the event is happening (e.g. clean studio table, rough natural terrain, laboratory bench)\n\nKey visuals or background details (e.g. dust particles, polished surface, subtle light reflections)\n\nStyle of scene (e.g. macro close-up, cinematic slow-motion, minimalist, abstract)\n\nOk with fictional settings.\n\nThe Sound must:\n\nBe under 15 words.\n\nDescribe the primary sound that makes sense to happen in the video. This will be fed to a sound model later on.\n\n\n***\nOUTPUT FORMAT (single-line JSON array):\n\n[\n  {\n    \"Caption\": \"Short viral title with emoji #4_topic_hashtags #4_all_time_popular_hashtags #4_trending_hashtags\",\n    \"Idea\": \"Short idea under 13 words\",\n    \"Environment\": \"Brief vivid setting under 20 words matching the action\",\n    \"Sound\": \"Primary sound description under 15 words\",\n    \"Status\": \"for production\"\n  }\n]"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        2000,
        160
      ],
      "id": "6f873f14-1e37-4145-b8e2-25fae8fb02f3",
      "name": "Ideas AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        2240,
        380
      ],
      "id": "3a5fd33e-c2b0-4107-80b3-98b11996b3ed",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "4OSX4HqhwnVkWnUG",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Give me 2 video prompts based on the previous idea\n\nUse the Think tool to review your output",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=Role: You are a prompt-generation AI specializing in cinematic, ASMR-style video prompts. Your task is to generate a multi-scene video sequence that vividly shows a sharp knife actively cutting through a specific object in a clean, high-detail setting.\n\nYour writing must follow this style:\n\nSharp, precise cinematic realism.\n\nMacro-level detail with tight focus on the blade interacting with the object.\n\nThe knife must always be in motion — slicing, splitting, or gliding through the material. Never idle or static.\n\nCamera terms are allowed (e.g. macro view, tight angle, over-the-blade shot).\n\nEach scene must contain all of the following, expressed through detailed visual language:\n\n✅ The main object or subject (from the Idea)\n\n✅ The cutting environment or surface (from the Environment)\n\n✅ The texture, structure, and behavior of the material as it’s being cut\n\n✅ A visible, sharp blade actively cutting\n\nDescriptions should show:\n\nThe physical makeup of the material — is it translucent, brittle, dense, reflective, granular, fibrous, layered, or fluid-filled?\n\nHow the material responds to the blade — resistance, cracking, tearing, smooth separation, tension, vibration.\n\nThe interaction between the blade and the surface — light reflection, buildup of particles, contact points, residue or dust.\n\nAny ASMR-relevant sensory cues like particle release, shimmer, or subtle movement, but always shown visually — not narrated.\n\nTone:\n\nClean, clinical, visual.\n\nNo poetic metaphors, emotion, or storytelling.\n\nAvoid fantasy or surreal imagery.\n\nAll description must feel physically grounded and logically accurate.\n\nLength:\n\nEach scene must be between 1,000 and 2,000 characters.\n\nNo shallow or repetitive scenes — each must be immersive, descriptive, and specific.\n\nEach scene should explore a distinct phase of the cutting process, a different camera perspective, or a new behavior of the material under the blade.\n\nInputs:\n\nIdea: \"{{ $json.idea }}\"\nEnvironment: \"{{ $json.environment_prompt }}\"\nSound: \"{{ $json.sound_prompt }}\"\n\nFormat:\n\nIdea: \"...\"\nEnvironment: \"...\"\nSound: \"...\"\n\nScene 1: \"...\"\nScene 2: \"...\"\nScene 3: \"...\"\nScene 4: \"...\"\nScene 5: \"...\"\nScene 6: \"...\"\nScene 7: \"...\"\nScene 8: \"...\"\nScene 9: \"...\"\nScene 10: \"...\"\nScene 11: \"...\"\nScene 12: \"...\"\nScene 13: \"...\"\n\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        2400,
        160
      ],
      "id": "48c1f6a3-79e5-4711-bd87-63e9ca98a202",
      "name": "Prompts AI Agent"
    },
    {
      "parameters": {
        "jsonSchemaExample": "[\n  {\n    \"Caption\": \"Diver Removes Nets Off Whale 🐋 #whalerescue #marinelife #oceanrescue #seahelpers #love #nature #instagood #explore #viral #savenature #oceanguardians #cleanoceans\",\n    \"Idea\": \"Diver carefully cuts tangled net from distressed whale in open sea\",\n    \"Environment\": \"Open ocean, sunlight beams through water, diver and whale, cinematic realism\",\n    \"Sound\": \"Primary sound description under 15 words\",\n    \"Status\": \"for production\"\n  }\n]\n"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        2100,
        380
      ],
      "id": "2696237c-b84f-445d-a82b-9a3261e21242",
      "name": "Parser"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        1860,
        160
      ],
      "id": "b1185c67-b6ff-4794-80d9-298d9adbd97f",
      "name": "Schedule Trigger1"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"Idea\": \"An obsidian rock being sliced with a shimmering knife\",\n  \"Environment\": \"Clean studio table, subtle light reflections\",\n  \"Sound\": \"Crisp slicing, deep grinding, and delicate crumbling\",\n  \"Scene 1\": \"Extreme macro shot: a razor-sharp, polished knife blade presses into the dark, granular surface of an obsidian rock, just beginning to indent.\",\n  \"Scene 2\": \"Close-up: fine, iridescent dust particles erupt from the point of contact as the blade cuts deeper into the obsidian, catching the studio light.\",\n  \"Scene 3\": \"Mid-shot: the knife, held perfectly steady, has formed a shallow, clean groove across the obsidian's shimmering surface, revealing a new, smooth texture.\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        2600,
        360
      ],
      "id": "70a28eff-61f6-433d-b6e1-031f3590aadd",
      "name": "Parser2"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.wavespeed.ai/api/v3/bytedance/seedance-v1-pro-t2v-480p",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "application/json",
        "body": "={\n  \"aspect_ratio\": \"9:16\",\n  \"duration\": 10,\n  \"prompt\": \"VIDEO THEME: {{ $('Prompts AI Agent').item.json.output.Idea }} | WHAT HAPPENS IN THE VIDEO: {{ $json.description }} | WHERE THE VIDEO IS SHOT: {{ $('Prompts AI Agent').item.json.output.Environment }}\"\n}\n",
        "options": {
          "batching": {
            "batch": {
              "batchSize": 1,
              "batchInterval": 3000
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2060,
        540
      ],
      "id": "36a7e41b-8523-42ed-8796-0d833116cff0",
      "name": "Create Clips",
      "credentials": {
        "httpHeaderAuth": {
          "id": "NDP74UE6PZTi0W1G",
          "name": "Wavespeed Header Auth"
        }
      }
    },
    {
      "parameters": {
        "amount": 240
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2260,
        540
      ],
      "id": "c946bb26-42f1-4f80-8d36-a1261956de12",
      "name": "Wait for Clips",
      "webhookId": "3ef8e370-50cf-489e-8775-bf502ce60a26"
    },
    {
      "parameters": {
        "url": "=https://api.wavespeed.ai/api/v3/predictions/{{ $json.data.id }}/result",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2580,
        540
      ],
      "id": "375a5702-f0a2-4300-b091-b7fcfb5c8e2f",
      "name": "Get Clips",
      "credentials": {
        "httpHeaderAuth": {
          "id": "NDP74UE6PZTi0W1G",
          "name": "Wavespeed Header Auth"
        }
      }
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1yKqFaHgsyD1S2VpE39Bmd6Yug0UYy0v-lpn1u_cYabg",
          "mode": "list",
          "cachedResultName": "Email DB for Test",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1yKqFaHgsyD1S2VpE39Bmd6Yug0UYy0v-lpn1u_cYabg/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 827736837,
          "mode": "list",
          "cachedResultName": "seedance ASMR",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1yKqFaHgsyD1S2VpE39Bmd6Yug0UYy0v-lpn1u_cYabg/edit#gid=827736837"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "idea": "={{ $json.output[0].Idea }}",
            "caption": "={{ $json.output[0].Caption }}",
            "production": "={{ $json.output[0].Status }}",
            "id": "=ROW()-1",
            "environment_prompt": "={{ $json.output[0].Environment }}",
            "sound_prompt": "={{ $json.output[0].Sound }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "idea",
              "displayName": "idea",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "caption",
              "displayName": "caption",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "production",
              "displayName": "production",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "environment_prompt",
              "displayName": "environment_prompt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "sound_prompt",
              "displayName": "sound_prompt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "final_output",
              "displayName": "final_output",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        2280,
        160
      ],
      "id": "301a1fd3-9ee6-4236-9c44-b32b2ea5917c",
      "name": "Log the Idea",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "yQEtvn5JR4KEsVqb",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "content": "# Generate Clips",
        "height": 100,
        "width": 1300,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1420,
        540
      ],
      "id": "adc5decc-2922-4b80-be0a-23f0923517e8",
      "name": "Sticky Note10"
    },
    {
      "parameters": {
        "content": "# Generate Sounds\n",
        "height": 100,
        "width": 1300,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1420,
        680
      ],
      "id": "94d919ee-3645-432d-979e-b47055fd8a06",
      "name": "Sticky Note13"
    },
    {
      "parameters": {
        "content": "# Idea Generation",
        "height": 340,
        "width": 1640,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1420,
        140
      ],
      "id": "7f24ebe2-6957-4493-95ef-30d5c41a9f3a",
      "name": "Sticky Note14"
    },
    {
      "parameters": {
        "content": "# Final video & YT Upload",
        "height": 100,
        "width": 1620,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1420,
        960
      ],
      "id": "952be393-b13c-4508-a689-4a36d58cc684",
      "name": "Sticky Note9"
    },
    {
      "parameters": {
        "content": "# Stitch Video",
        "height": 100,
        "width": 1300,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1420,
        820
      ],
      "id": "87b12ddf-fb4d-4991-9d62-62d7b98d4042",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "={{ $json.output['Scene 1'] }}\n{{ $json.output['Scene 2'] }}"
            },
            {
              "content": "=You are a smart youtube Title & Description generator.\nBased on user inout generate a catchy title and description for youtube video\n\n\n- add 5-6 relevant hashtags in description\n\nOUTPUT in JASON\n{\n\"Title\" :\"\"\n\"Description\": \"\"\n}",
              "role": "system"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        2740,
        160
      ],
      "id": "13f81d12-558a-45f5-a013-3f24cfbb6212",
      "name": "Youtube title generator",
      "credentials": {
        "openAiApi": {
          "id": "4OSX4HqhwnVkWnUG",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "resource": "video",
        "operation": "upload",
        "title": "={{ $json.message.content.Title }} #Shorts",
        "regionCode": "BD",
        "categoryId": "24",
        "options": {
          "description": "={{ $json.message.content.Description }}"
        }
      },
      "type": "n8n-nodes-base.youTube",
      "typeVersion": 1,
      "position": [
        2980,
        960
      ],
      "id": "60801b45-14ed-4739-b21e-0eacba2a99b3",
      "name": "YouTube Upload",
      "credentials": {
        "youTubeOAuth2Api": {
          "id": "HMuATzP5iAQI4shy",
          "name": "YouTube API"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1yKqFaHgsyD1S2VpE39Bmd6Yug0UYy0v-lpn1u_cYabg",
          "mode": "list",
          "cachedResultName": "Email DB for Test",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1yKqFaHgsyD1S2VpE39Bmd6Yug0UYy0v-lpn1u_cYabg/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 827736837,
          "mode": "list",
          "cachedResultName": "seedance ASMR",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1yKqFaHgsyD1S2VpE39Bmd6Yug0UYy0v-lpn1u_cYabg/edit#gid=827736837"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "production": "done",
            "final_output": "={{ $json.video_url }}",
            "idea": "={{ $('Log the Idea').first().json.idea }}"
          },
          "matchingColumns": [
            "idea"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "idea",
              "displayName": "idea",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "caption",
              "displayName": "caption",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "production",
              "displayName": "production",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "environment_prompt",
              "displayName": "environment_prompt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "sound_prompt",
              "displayName": "sound_prompt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "final_output",
              "displayName": "final_output",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        2220,
        960
      ],
      "id": "112f8640-23ba-463f-8b55-88627f39d436",
      "name": "Log final output",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "yQEtvn5JR4KEsVqb",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.video_url }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2780,
        960
      ],
      "id": "54561136-199a-4d5c-b688-454d5c0fafc6",
      "name": "Download Video"
    }
  ],
  "pinData": {
    "Ideas AI Agent": [
      {
        "json": {
          "output": [
            {
              "Caption": "Crystal cookie cut! 🍪 #hardmaterial #slicing #satisfying #asmr #viral #fun #trending #amazing #wow #instagood #creative #explore",
              "Idea": "Blue sapphire shaped like a cookie",
              "Environment": "Bright kitchen with shimmering sapphire shards and gleaming knives",
              "Sound": "Sharp slicing through solid gem material",
              "Status": "for production"
            }
          ]
        }
      }
    ],
    "Prompts AI Agent": [
      {
        "json": {
          "output": {
            "Idea": "Blue sapphire shaped like a cookie",
            "Environment": "Bright kitchen with shimmering sapphire shards and gleaming knives",
            "Sound": "Sharp slicing through solid gem material",
            "Scene 1": "A macro shot reveals a gleaming blue sapphire cookie resting on a polished marble countertop. The light refracts through its crystalline structure, creating shards of blue and white light across the surface with each glint. Suddenly, a glistening, high-grade knife, reflecting the kitchen's bright overhead lights, descends into the frame. The blade, ultra-sharp and meticulously polished, engages with the sapphire's rigid surface, where a precise line forms, the edge of the knife slipping through resistance smoothly. Tiny shimmering particles of sapphire begin to break away at the contact point, creating a delicate cloud of dust that stirs in the air. The camera focuses on the friction-resistance interaction, capturing the micro-level details as sapphire shavings accumulate around the blade, each glinting under the bright kitchen lights.",
            "Scene 2": "Transitioning to an overhead shot, the camera captures the knife's blade poised above the sapphire cookie, the blade’s edge poised and gleaming sharply. As the downwards motion begins, the knife pierces through the sapphire with a defined, distinct sound — a crisp snap as its dense surface yields. The sapphire takes on a new life as the camera zooms in, revealing its internal structure, with the layers of the gem visibly giving way to the bladed edge. Fragments begin to flute away, glinting like miniature solar systems as they detach. Up close, the vibration travel is captured, resonating softly against the chopping block, revealing not just the cut but the aftermath of movement observed in the fractured surface. In this captured moment, light refracted through the knife's angle creates a kaleidoscopic effect around the cutting zone."
          }
        }
      }
    ],
    "Unbundle Prompts": [
      {
        "json": {
          "description": "A macro shot reveals a gleaming blue sapphire cookie resting on a polished marble countertop. The light refracts through its crystalline structure, creating shards of blue and white light across the surface with each glint. Suddenly, a glistening, high-grade knife, reflecting the kitchen's bright overhead lights, descends into the frame. The blade, ultra-sharp and meticulously polished, engages with the sapphire's rigid surface, where a precise line forms, the edge of the knife slipping through resistance smoothly. Tiny shimmering particles of sapphire begin to break away at the contact point, creating a delicate cloud of dust that stirs in the air. The camera focuses on the friction-resistance interaction, capturing the micro-level details as sapphire shavings accumulate around the blade, each glinting under the bright kitchen lights."
        }
      },
      {
        "json": {
          "description": "Transitioning to an overhead shot, the camera captures the knife's blade poised above the sapphire cookie, the blade’s edge poised and gleaming sharply. As the downwards motion begins, the knife pierces through the sapphire with a defined, distinct sound — a crisp snap as its dense surface yields. The sapphire takes on a new life as the camera zooms in, revealing its internal structure, with the layers of the gem visibly giving way to the bladed edge. Fragments begin to flute away, glinting like miniature solar systems as they detach. Up close, the vibration travel is captured, resonating softly against the chopping block, revealing not just the cut but the aftermath of movement observed in the fractured surface. In this captured moment, light refracted through the knife's angle creates a kaleidoscopic effect around the cutting zone."
        }
      }
    ],
    "Get Clips": [
      {
        "json": {
          "code": 200,
          "message": "success",
          "data": {
            "id": "be0c1f9c329c434ba31c4c0a48bf89a9",
            "model": "bytedance/seedance-v1-pro-t2v-480p",
            "outputs": [
              "https://d2g64w682n9w0w.cloudfront.net/predictions/be0c1f9c329c434ba31c4c0a48bf89a9/1.mp4"
            ],
            "urls": {
              "get": "https://api.wavespeed.ai/api/v3/predictions/be0c1f9c329c434ba31c4c0a48bf89a9/result"
            },
            "has_nsfw_contents": [
              false
            ],
            "status": "completed",
            "created_at": "2025-06-24T05:58:01.107291116Z",
            "error": "",
            "executionTime": 66588,
            "timings": {
              "inference": 66588
            }
          }
        }
      },
      {
        "json": {
          "code": 200,
          "message": "success",
          "data": {
            "id": "ea507ed4d8e84c9e9b1ebd09be6a0314",
            "model": "bytedance/seedance-v1-pro-t2v-480p",
            "outputs": [
              "https://d2g64w682n9w0w.cloudfront.net/predictions/ea507ed4d8e84c9e9b1ebd09be6a0314/1.mp4"
            ],
            "urls": {
              "get": "https://api.wavespeed.ai/api/v3/predictions/ea507ed4d8e84c9e9b1ebd09be6a0314/result"
            },
            "has_nsfw_contents": [
              false
            ],
            "status": "completed",
            "created_at": "2025-06-24T05:58:03.972634874Z",
            "error": "",
            "executionTime": 67099,
            "timings": {
              "inference": 67099
            }
          }
        }
      }
    ],
    "Get Sounds": [
      {
        "json": {
          "video": {
            "url": "https://v3.fal.media/files/tiger/6MTO6q2dGMVma9piU4qud_1.mp4",
            "content_type": "application/octet-stream",
            "file_name": "1.mp4",
            "file_size": 1013994
          }
        }
      },
      {
        "json": {
          "video": {
            "url": "https://v3.fal.media/files/tiger/lm-Eb7OtccR938vmxBW7A_1.mp4",
            "content_type": "application/octet-stream",
            "file_name": "1.mp4",
            "file_size": 1235945
          }
        }
      }
    ],
    "List Elements": [
      {
        "json": {
          "video_urls": [
            "https://v3.fal.media/files/tiger/6MTO6q2dGMVma9piU4qud_1.mp4",
            "https://v3.fal.media/files/tiger/lm-Eb7OtccR938vmxBW7A_1.mp4"
          ]
        }
      }
    ],
    "Get Final Video": [
      {
        "json": {
          "video_url": "https://v3.fal.media/files/panda/hpJQxt0P-PFzZVKHo59vz_output.mp4",
          "thumbnail_url": "https://v3.fal.media/files/zebra/eX9XWb-VtmMtu6gajZxgr_first_frame.jpg"
        }
      }
    ]
  },
  "connections": {
    "Unbundle Prompts": {
      "main": [
        [
          {
            "node": "Create Clips",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Sounds": {
      "main": [
        [
          {
            "node": "Wait for Sounds",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait for Sounds": {
      "main": [
        [
          {
            "node": "Get Sounds",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "List Elements": {
      "main": [
        [
          {
            "node": "Sequence Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sequence Video": {
      "main": [
        [
          {
            "node": "Wait for Final Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait for Final Video": {
      "main": [
        [
          {
            "node": "Get Final Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Think": {
      "ai_tool": [
        [
          {
            "node": "Ideas AI Agent",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "Prompts AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Ideas AI Agent": {
      "main": [
        [
          {
            "node": "Log the Idea",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Ideas AI Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Prompts AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Ideas AI Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger1": {
      "main": [
        [
          {
            "node": "Ideas AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prompts AI Agent": {
      "main": [
        [
          {
            "node": "Unbundle Prompts",
            "type": "main",
            "index": 0
          },
          {
            "node": "Youtube title generator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Sounds": {
      "main": [
        [
          {
            "node": "List Elements",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Final Video": {
      "main": [
        [
          {
            "node": "Log final output",
            "type": "main",
            "index": 0
          },
          {
            "node": "Download Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parser2": {
      "ai_outputParser": [
        [
          {
            "node": "Prompts AI Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Create Clips": {
      "main": [
        [
          {
            "node": "Wait for Clips",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait for Clips": {
      "main": [
        [
          {
            "node": "Get Clips",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Clips": {
      "main": [
        [
          {
            "node": "Create Sounds",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log the Idea": {
      "main": [
        [
          {
            "node": "Prompts AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Youtube title generator": {
      "main": [
        [
          {
            "node": "YouTube Upload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Video": {
      "main": [
        [
          {
            "node": "YouTube Upload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "92296bc0-a048-4d05-8a20-9c5e96fe528b",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "775349a6ee29578bdbe5276d8cc4bf4f5c48060e4c0d031f28e89c7dcd9cbd2d"
  },
  "id": "qnudNzoHosW3gbqL",
  "tags": []
}