{
  "name": "Project 1 : Email count summary + Telegram",
  "nodes": [
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4f49769f-60a8-4cdc-88ac-51b55361aac8",
              "name": "From",
              "value": "={{ $json.From }}",
              "type": "string"
            },
            {
              "id": "5353060a-7c74-4507-9e73-3aae51885c8c",
              "name": "Subject",
              "value": "={{ $json.Subject }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1340,
        -860
      ],
      "id": "f7314557-7d39-463d-899e-50ef03b91fe7",
      "name": "Get Sender List"
    },
    {
      "parameters": {
        "sendTo": "ishtiaq6041@gmail.com",
        "subject": "=Email Summary of : {{\n  (() => {\n    const dateStr = $('Telegram Bot').first().json.message.text.replace(/-/g, '/');\n    const parts = dateStr.split('/');\n    const year = parts[0];\n    const month = parseInt(parts[1]);\n    const day = parseInt(parts[2]);\n    const monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    return `${day} ${monthNames[month-1]} ${year}`;\n  })()\n}}",
        "message": "=Dear Akram \n<br><br> \n\nHere is te summary of email received on {{ $('Telegram Bot').first().json.message.text }}\n\n<br><br>\n\n{{$json[\"message\"]}}\n\n<br><br> \n\nRegards,\n<br> \nAkram ",
        "options": {
          "appendAttribution": false,
          "senderName": "Akram Hossain"
        }
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        -900,
        -960
      ],
      "id": "74b325ab-da77-41ec-a5b8-2a7646982cbe",
      "name": "Sent to Mail",
      "webhookId": "08ead3d1-ab02-4800-92c6-3b158f2fb9e3",
      "credentials": {
        "gmailOAuth2": {
          "id": "qBeizKMvB2OZ3BYY",
          "name": "Gmail account 2"
        }
      }
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        -1780,
        -860
      ],
      "id": "b067668a-5374-43ab-87cd-8ae709e3f676",
      "name": "Telegram Bot",
      "webhookId": "5c95e070-57f7-47eb-8f01-d24ff7714a0d",
      "credentials": {
        "telegramApi": {
          "id": "1HQHysBA8cgZwdNs",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "returnAll": true,
        "filters": {
          "labelIds": [
            "INBOX"
          ],
          "q": "=after:{{ new Date(new Date($json.message.text).getTime()).toISOString().slice(0, 10) }} before:{{ new Date(new Date($json.message.text).getTime() + 86400000*2).toISOString().slice(0, 10) }} -from:me"
        }
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        -1560,
        -860
      ],
      "id": "7d3565ea-7a8c-4a71-b713-c88fbe0bb9c5",
      "name": "Get Mail Box",
      "webhookId": "8ed1676c-c8cd-472b-9307-9ec2a89b0f02",
      "credentials": {
        "gmailOAuth2": {
          "id": "qBeizKMvB2OZ3BYY",
          "name": "Gmail account 2"
        }
      }
    },
    {
      "parameters": {
        "content": "### Get all emails as per date input in Telegram",
        "height": 80,
        "width": 220
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1600,
        -700
      ],
      "typeVersion": 1,
      "id": "4f5429cb-bbaa-4a31-ac78-4cfe6c700f48",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "jsCode": "const fromCounts = {};\n\nfor (const item of items) {\n  const from = item.json.From;\n  fromCounts[from] = (fromCounts[from] || 0) + 1;\n}\n\nfunction escapeHtml(str) {\n  return str\n    .replace(/&/g, \"&amp;\")\n    .replace(/</g, \"&lt;\")\n    .replace(/>/g, \"&gt;\");\n}\n\nconst entries = Object.entries(fromCounts);\n\n// Sort by count Descending\nentries.sort((a, b) => b[1] - a[1]);\n\nlet message = `\n  <table cellpadding=\"8\" cellspacing=\"0\" style=\"\n    border-spacing: 2px;\n    border: 2px solid black;\n    border-collapse: separate;\n    table-layout: auto;\n    font-family: Arial, sans-serif;\n    font-size: 14px;\n    width: auto;\n  \">\n    <thead>\n      <tr>\n        <th style=\"border: 1px solid black; text-align: left; background-color: #f0f0f0; white-space: nowrap;\">From</th>\n        <th style=\"border: 1px solid black; text-align: right; background-color: #f0f0f0; white-space: nowrap;\">Count</th>\n      </tr>\n    </thead>\n    <tbody>\n`;\n\nfor (const [from, count] of entries) {\n  message += `\n    <tr>\n      <td style=\"border: 1px solid black; text-align: left; white-space: nowrap;\">${escapeHtml(from)}</td>\n      <td style=\"border: 1px solid black; text-align: right;\">${count}</td>\n    </tr>\n  `;\n}\n\nmessage += `\n    </tbody>\n  </table>\n`;\n\nlet textMessage = 'From\\t\\t\\t|\\t\\t\\tCount\\n';\ntextMessage += '----------------------------------\\n';\n\nfor (const [from, count] of entries) {\n  textMessage += `${from}\\t\\t|\\t\\t${count}\\n`;\n}\n\nreturn [\n  {\n    json: {\n      message,        // HTML email\n      textMessage     // plain text for Telegram\n    },\n  },\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1120,
        -860
      ],
      "id": "f1337693-5aa3-4dba-9c7e-f2cc49fb40fb",
      "name": "Count & Format"
    },
    {
      "parameters": {
        "content": "- Counts mail\n- generate 2 output\n ** 1 for Mail (HTML)\n ** 1 for Telegram (Text)",
        "height": 120
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1200,
        -700
      ],
      "typeVersion": 1,
      "id": "ee599164-c89f-4377-a15b-3a4dee6d35e0",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Bot').first().json.message.chat.id }}",
        "text": "=Email Summary of : \n{{\n  (() => {\n    const dateStr = $('Telegram Bot').first().json.message.text.replace(/-/g, '/');\n    const parts = dateStr.split('/');\n    const year = parts[0];\n    const month = parseInt(parts[1]);\n    const day = parseInt(parts[2]);\n    const monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    return `${day} ${monthNames[month-1]} ${year}`;\n  })()\n}}\n\n\n{{ \n  $json.textMessage\n    .replace(/\\[([^\\]]+)\\]\\(([^)]+)\\)/g, '<<LINK::$1::$2>>') // Preserve links\n    .replace(/([_*\\[\\]()~`!{}])/g, '\\\\$1') // Escape only what really needs escaping\n    .replace(/<<LINK::(.*?)::(.*?)>>/g, '[$1]($2)') // Restore links\n}}\n",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -900,
        -740
      ],
      "id": "bcb4c07d-4b31-4519-8e63-16fb9458f35e",
      "name": "Sent to Telegram",
      "webhookId": "4bcf8261-e28d-4d08-b30b-5fe1b72061bb",
      "credentials": {
        "telegramApi": {
          "id": "1HQHysBA8cgZwdNs",
          "name": "Telegram account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Get Sender List": {
      "main": [
        [
          {
            "node": "Count & Format",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Bot": {
      "main": [
        [
          {
            "node": "Get Mail Box",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Mail Box": {
      "main": [
        [
          {
            "node": "Get Sender List",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Count & Format": {
      "main": [
        [
          {
            "node": "Sent to Telegram",
            "type": "main",
            "index": 0
          },
          {
            "node": "Sent to Mail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "62d2b104-35f2-4d1c-ab18-46ec7466648d",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "775349a6ee29578bdbe5276d8cc4bf4f5c48060e4c0d031f28e89c7dcd9cbd2d"
  },
  "id": "qF7RWKXUAqgsdUEH",
  "tags": []
}